<?xml version="1.0" encoding="UTF-8"?>
<record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <client_script><![CDATA[function($scope, $rootScope, spUtil) {
  /* widget controller */
  var c = this;
	
	//Widget catches the selection of a note record from NotesList (event received)
	//Now we want to get the record's field values from the server to display
	//in the Notes Body Widget
	//this.server.get() returns a promise. When the response is received from the server,
	//the .then() function logic executes.
	$rootScope.$on('selectNote', function(event, data){
		c.server.get({
			action: 'getNote',
			noteID: $rootScope.noteID
		}).then(function(r){
						c.data.title = r.data.note.title;
						c.data.note = r.data.note.note;
						c.data.noteID = r.data.note.sys_id;
		});
		
	});
	
	c.updateNote = function(updateType){
		c.server.get({
			action: 'updateNote',
			noteID: c.data.noteID,
			noteBody: c.data.note,
			noteTitle: c.data.title
		}).then(function(r){
		});
		//$rootScope.noteTitle = c.data.title;
		//$rootScope.noteTitle = c.data.title;
		//$rootScope.$emit('updateNoteValue');
	}
}]]></client_script>
        <controller_as>c</controller_as>
        <css/>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>false</has_preview>
        <id>notes_body</id>
        <internal>false</internal>
        <link/>
        <name>Notes Body</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {
  /* populate the 'data' object */
  /* e.g., data.table = $sp.getValue('table'); */
	
	//Logic to respond to the 'getNote' action called from the Client Script
	//Recall that the input object is the data object received from the Client 
	//Scriptâ€™s controller
	if(input && input.noteID){
		var note = new GlideRecord('x_snc_createnotes_note');
		//If a note ID has been provided and the action is 'getNote' execute promise
		if(note.get(input.noteID)){
			if(input.action == 'getNote'){
				data.note = {};
				//Copies values for the specified field names from the 
				//GlideRecord into the data parameter.
				$sp.getRecordValues(data.note, note, "title, note, sys_id");
			}
			else if(input.action == 'updateNote'){
				note.title = input.noteTitle;
				note.note = input.noteBody;
				note.update();
			}
		}
	}

})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2018-07-26 16:18:02</sys_created_on>
        <sys_id>7590e4a14fe31300b291b5e18110c7d9</sys_id>
        <sys_mod_count>11</sys_mod_count>
        <sys_name>Notes Body</sys_name>
        <sys_package display_value="CreateNotes" source="x_snc_createnotes">df5fd9a5090232007f44e1046c8ff69f</sys_package>
        <sys_policy/>
        <sys_scope display_value="CreateNotes">df5fd9a5090232007f44e1046c8ff69f</sys_scope>
        <sys_update_name>sp_widget_7590e4a14fe31300b291b5e18110c7d9</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2018-07-27 16:08:35</sys_updated_on>
        <template><![CDATA[<div class="panel panel-default" ng-show="c.data.noteID">
  <div class="panel-heading clearfix">
    <div class="row">
      <div class="col-md-12">
        <input class="form-control" id="note-title" ng-model="c.data.title" ng-change="c.updateNote('title')" ng-model-options="{debounce: 1000}"/>
      </div>
    </div>
  </div>
  <div class="panel-body">
    <textarea class="form-control" id="note-body" ng-model="c.data.note" ng-change="c.updateNote('body')" ng-model-options="{debounce: 1000}" ></textarea>
  </div>
</div>]]></template>
    </sp_widget>
</record_update>
